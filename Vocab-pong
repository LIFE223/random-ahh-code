<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Vocabulary Pong</title>
  <style>
    /* Reset & basic styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      background: #f2f2f2;
      font-family: sans-serif;
    }
    #gameContainer {
      position: relative;
      margin: 20px auto;
      width: 800px;
      height: 400px;
      border: 2px solid #333;
    }
    canvas {
      display: block;
      background: black; /* default classic setting */
    }
    /* Start overlay */
    #startOverlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.6);
      color: white;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 2;
    }
    #startOverlay button {
      padding: 10px 20px;
      font-size: 18px;
      margin-bottom: 10px;
      cursor: pointer;
    }
    /* Settings button (gear icon) */
    #settingsButton {
      position: absolute;
      top: 10px;
      right: 10px;
      z-index: 3;
      padding: 5px 10px;
      font-size: 20px;
      background: #ffffffcc;
      border: 1px solid #888;
      border-radius: 4px;
      cursor: pointer;
    }
    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 10;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.6);
    }
    .modal-content {
      background-color: #fefefe;
      margin: 10% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 300px;
      text-align: center;
      border-radius: 8px;
    }
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }
    .close:hover {
      color: black;
    }
    .modal-content label,
    .modal-content select,
    .modal-content input,
    .modal-content button {
      margin: 10px 0;
      display: block;
      width: 100%;
    }
    /* Mobile controls */
    #mobileControls {
      display: none;
      position: absolute;
      bottom: 10px;
      left: 50%;
      transform: translateX(-50%);
      z-index: 3;
    }
    #mobileControls button {
      padding: 10px;
      font-size: 18px;
      margin: 0 5px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div id="gameContainer">
    <canvas id="gameCanvas" width="800" height="400"></canvas>
    
    <!-- Start overlay -->
    <div id="startOverlay">
      <button id="startButton">Start</button>
      <p>Press space or tap to start!</p>
    </div>
    
    <!-- Settings Button (Gear Icon) -->
    <button id="settingsButton">⚙</button>
    
    <!-- Settings Modal -->
    <div id="settingsModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Settings</h2>
        <label for="gameColor">Game Color:</label>
        <select id="gameColor">
          <option value="black">Classic Black</option>
          <option value="red">Red</option>
          <option value="white">White</option>
          <option value="blue">Blue</option>
        </select>
        <label for="vocabDifficulty">Vocabulary Difficulty:</label>
        <select id="vocabDifficulty">
          <option value="1">Level 1: 3–4 Letter Words</option>
          <option value="2">Level 2: 5–6 Letter Words</option>
          <option value="3">Level 3: 7+ Letter Words</option>
        </select>
        <button id="saveSettings">Save</button>
      </div>
    </div>
    
    <!-- Vocabulary Challenge Modal -->
    <div id="vocabModal" class="modal">
      <div class="modal-content">
        <h2>Vocabulary Challenge</h2>
        <p id="vocabPrompt">Unscramble: </p>
        <input type="text" id="vocabAnswer" placeholder="Your answer" />
        <button id="submitVocab">Submit</button>
        <p id="vocabFeedback" style="color: red;"></p>
      </div>
    </div>
    
    <!-- Mobile Controls (for touch devices) -->
    <div id="mobileControls">
      <button id="upButton">↑</button>
      <button id="downButton">↓</button>
    </div>
  </div>
  
  <script>
    // Get DOM elements
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    const startOverlay = document.getElementById("startOverlay");
    const startButton = document.getElementById("startButton");

    const settingsButton = document.getElementById("settingsButton");
    const settingsModal = document.getElementById("settingsModal");
    const closeSettings = settingsModal.querySelector(".close");
    const gameColorSelect = document.getElementById("gameColor");
    const vocabDifficultySelect = document.getElementById("vocabDifficulty");
    const saveSettingsButton = document.getElementById("saveSettings");

    const vocabModal = document.getElementById("vocabModal");
    const vocabPrompt = document.getElementById("vocabPrompt");
    const vocabAnswerInput = document.getElementById("vocabAnswer");
    const submitVocabButton = document.getElementById("submitVocab");
    const vocabFeedback = document.getElementById("vocabFeedback");

    const mobileControls = document.getElementById("mobileControls");
    const upButton = document.getElementById("upButton");
    const downButton = document.getElementById("downButton");

    // Show mobile controls if touch device
    if ('ontouchstart' in window) {
      mobileControls.style.display = "block";
    } else {
      mobileControls.style.display = "none";
    }

    // Game state and settings
    let gameStarted = false;
    let gamePaused = false;
    let score = 0;
    let gameColor = "black"; // default game background
    function getContrastingColor(bg) { return bg === "white" ? "black" : "white"; }
    let contrastColor = getContrastingColor(gameColor); // color for paddles, ball and text

    // Paddle & ball settings
    const paddleWidth = 10, paddleHeight = 80, paddleSpeed = 5;
    let playerPaddle = { x: 10, y: canvas.height / 2 - paddleHeight / 2, width: paddleWidth, height: paddleHeight };
    let aiPaddle = { x: canvas.width - 20, y: canvas.height / 2 - paddleHeight / 2, width: paddleWidth, height: paddleHeight };
    let ball = {
      x: canvas.width / 2,
      y: canvas.height / 2,
      radius: 8,
      speed: 4,
      velocityX: 4,  // ball initial horizontal velocity
      velocityY: 2
    };

    // For tracking key presses (arrow keys, WASD)
    let keysDown = {};
    document.addEventListener("keydown", (e) => { keysDown[e.key] = true; });
    document.addEventListener("keyup", (e) => { keysDown[e.key] = false; });

    // Mobile control buttons (touch events)
    upButton.addEventListener("touchstart", (e) => { e.preventDefault(); playerPaddle.y -= paddleSpeed; });
    downButton.addEventListener("touchstart", (e) => { e.preventDefault(); playerPaddle.y += paddleSpeed; });

    // Vocabulary settings and word pool
    let vocabDifficulty = "1"; // default level
    let usedWords = { "1": [], "2": [], "3": [] };
    const vocabWords
